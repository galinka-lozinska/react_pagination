{"version":3,"sources":["components/Pagination/Pagination.js","components/Pagination/PaginationTypes.js","components/SelectPerPage/SelectPerPage.js","components/SelectPerPage/SelectPerPageTypes.js","App.js","index.js"],"names":["Pagination","PropTypes","number","state","paginationSchema","getPaginationSchema","currentPage","amount","props","schema","setState","Array","from","length","_","index","this","prevProps","onPageChange","current","aria-label","className","href","onClick","event","preventDefault","aria-hidden","map","element","key","uuid","React","Component","SelectPerPage","func","perPage","onPerPageChange","defaultValue","onChange","Number","target","value","App","total","page","paginationInfo","updatePaginationInfo","Math","min","handlePageChange","newPage","ceil","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.682fa135.chunk.js","sourcesContent":["/* eslint-disable no-nested-ternary */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport uuid from 'uuid-random';\nimport { PaginationTypes } from './PaginationTypes';\n\nimport './Pagination.css';\n\nexport class Pagination extends React.Component {\n  state = {\n    paginationSchema: [],\n  }\n\n  componentDidMount() {\n    this.getPaginationSchema(1);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.amount !== this.props.amount) {\n      this.props.onPageChange(1);\n      this.getPaginationSchema(1);\n    }\n  }\n\n  getPaginationSchema = (currentPage) => {\n    const { amount } = this.props;\n    let schema = [];\n\n    if (amount <= 5) {\n      this.setState({\n        paginationSchema:\n          Array.from({ length: amount }, (_, index) => index + 1),\n      });\n\n      return;\n    }\n\n    if (currentPage <= 3) {\n      schema = currentPage === 3\n        ? [1, 2, 3, 4, '...', amount]\n        : currentPage === 2\n          ? [1, 2, 3, '...', amount]\n          : [1, 2, '...', amount];\n\n      this.setState({\n        paginationSchema: [...schema],\n      });\n\n      return;\n    }\n\n    if (currentPage >= amount - 2) {\n      schema = currentPage === amount - 2\n        ? [1, '...', amount - 3, amount - 2, amount - 1, amount]\n        : currentPage === amount - 1\n          ? [1, '...', amount - 2, amount - 1, amount]\n          : [1, '...', amount - 1, amount];\n\n      this.setState({\n        paginationSchema: [...schema],\n      });\n\n      return;\n    }\n\n    this.setState({\n      paginationSchema:\n        [\n          1,\n          '...',\n          currentPage - 1,\n          currentPage,\n          currentPage + 1,\n          '...',\n          amount,\n        ],\n    });\n  }\n\n  render() {\n    const { current, amount, onPageChange } = this.props;\n    const { paginationSchema } = this.state;\n\n    return (\n      <nav aria-label=\"Page-navigation\">\n        <ul className=\"pagination\">\n          <li\n            className={current > 1 ? 'page-item' : 'page-item disabled'}\n          >\n            <a\n              className=\"page-link\"\n              href=\"/#\"\n              aria-label=\"Previous\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  onPageChange(current - 1);\n                  this.getPaginationSchema(current - 1);\n                }\n              }\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n            </a>\n          </li>\n          {paginationSchema.map(\n            element => (typeof element === 'number'\n              ? (\n                <li\n                  key={uuid()}\n                  className={\n                    element === current\n                      ? 'page-item active-item' : 'page-item'\n                  }\n                >\n                  <a\n                    className=\"page-link\"\n                    href=\"/#\"\n                    onClick={\n                      (event) => {\n                        event.preventDefault();\n                        onPageChange(element);\n                        this.getPaginationSchema(element);\n                      }\n                    }\n                  >\n                    {element}\n                  </a>\n                </li>\n              )\n              : (<li key={uuid()} className=\"page-item\">{element}</li>)),\n          )}\n          <li\n            className={current < amount\n              ? 'page-item' : 'page-item disabled'}\n          >\n            <a\n              className=\"page-link\"\n              href=\"/#\"\n              aria-label=\"Next\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  onPageChange(current + 1);\n                  this.getPaginationSchema(current + 1);\n                }\n              }\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n            </a>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nPagination.propTypes = PaginationTypes;\n","import PropTypes from 'prop-types';\n\nexport const PaginationTypes = {\n  amount: PropTypes.number,\n  current: PropTypes.number,\n};\n","import React from 'react';\nimport { SelectPerPageTypes } from './SelectPerPageTypes';\n\nexport const SelectPerPage = ({ perPage, onPerPageChange }) => (\n  <>\n    <p>\n      Select PerPage:\n      {' '}\n      <select\n        defaultValue={perPage}\n        onChange={(event) => {\n          onPerPageChange(Number(event.target.value));\n        }}\n      >\n        <option value={3}>3</option>\n        <option value={5}>5</option>\n        <option value={10}>10</option>\n        <option value={20}>20</option>\n      </select>\n    </p>\n  </>\n);\n\nSelectPerPage.propTypes = SelectPerPageTypes;\n","import PropTypes from 'prop-types';\n\nexport const SelectPerPageTypes = {\n  perPage: PropTypes.number,\n  onPerPageChange: PropTypes.func,\n  onUpdate: PropTypes.func,\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { SelectPerPage } from './components/SelectPerPage';\n\nexport class App extends React.Component {\n  state = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n    paginationInfo: '',\n  };\n\n  componentDidMount() {\n    this.updatePaginationInfo();\n  }\n\n  updatePaginationInfo = () => {\n    this.setState(state => ({\n      paginationInfo: `${1 + (state.perPage * (state.page - 1))}\n      - ${Math.min(state.page * state.perPage, state.total)}`,\n    }));\n  }\n\n  handlePageChange = (newPage) => {\n    this.setState({\n      page: newPage,\n    });\n    this.updatePaginationInfo();\n  }\n\n  onPerPageChange = (value) => {\n    this.setState({\n      perPage: value,\n    });\n  }\n\n  render() {\n    const {\n      total,\n      perPage,\n      page,\n      paginationInfo,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Pagination</h1>\n        <p>\n          {`Pagination Info: ${paginationInfo} of ${total}`}\n        </p>\n        <SelectPerPage\n          perPage={perPage}\n          onPerPageChange={this.onPerPageChange}\n        />\n        <Pagination\n          amount={Math.ceil(total / perPage)}\n          current={page}\n          onPageChange={this.handlePageChange}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}