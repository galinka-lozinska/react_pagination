{"version":3,"sources":["components/Pagination/Pagination.js","components/Pagination/PaginationTypes.js","components/SelectPerPage/SelectPerPage.js","components/SelectPerPage/SelectPerPageTypes.js","App.js","index.js"],"names":["Pagination","PropTypes","number","state","paginationSchema","getPaginationSchema","currentPage","amount","props","setState","Array","from","length","_","index","this","prevProps","onPageChange","current","aria-label","className","href","onClick","event","preventDefault","aria-hidden","map","element","key","uuid","React","Component","SelectPerPage","func","perPage","onPerPageChange","defaultValue","onChange","Number","target","value","App","total","page","handlePageChange","newPage","Math","min","ceil","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a0cbb1b.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport uuid from 'uuid-random';\nimport { PaginationTypes } from './PaginationTypes';\n\nimport './Pagination.css';\n\nexport class Pagination extends React.Component {\n  state = {\n    paginationSchema: [],\n  }\n\n  componentDidMount() {\n    this.getPaginationSchema(1);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.amount !== this.props.amount) {\n      this.props.onPageChange(1);\n      this.getPaginationSchema(1);\n    }\n  }\n\n  getPaginationSchema = (currentPage) => {\n    const { amount } = this.props;\n\n    if (amount <= 5) {\n      this.setState({\n        paginationSchema:\n          Array.from({ length: amount }, (_, index) => index + 1),\n      });\n\n      return;\n    }\n\n    if (currentPage === 1) {\n      this.setState({\n        paginationSchema: [currentPage, currentPage + 1, '...', amount],\n      });\n\n      return;\n    }\n\n    if (currentPage === 2) {\n      this.setState({\n        paginationSchema:\n          [currentPage - 1, currentPage, currentPage + 1, '...', amount],\n      });\n\n      return;\n    }\n\n    if (currentPage === 3 && currentPage !== amount) {\n      this.setState({\n        paginationSchema:\n          [\n            currentPage - 2,\n            currentPage - 1,\n            currentPage,\n            currentPage + 1,\n            '...',\n            amount],\n      });\n\n      return;\n    }\n\n    if (currentPage === amount) {\n      this.setState({\n        paginationSchema: [1, '...', currentPage - 1, currentPage],\n      });\n\n      return;\n    }\n\n    if (currentPage === amount - 1) {\n      this.setState({\n        paginationSchema:\n          [\n            1,\n            '...',\n            currentPage - 1,\n            currentPage,\n            currentPage + 1,\n          ],\n      });\n\n      return;\n    }\n\n    if (currentPage === amount - 2) {\n      this.setState({\n        paginationSchema:\n          [\n            1,\n            '...',\n            currentPage - 1,\n            currentPage,\n            currentPage + 1,\n            currentPage + 2,\n          ],\n      });\n\n      return;\n    }\n\n    this.setState({\n      paginationSchema:\n        [\n          1,\n          '...',\n          currentPage - 1,\n          currentPage,\n          currentPage + 1,\n          '...',\n          amount,\n        ],\n    });\n  }\n\n  render() {\n    const { current, amount, onPageChange } = this.props;\n    const { paginationSchema } = this.state;\n\n    return (\n      <nav aria-label=\"Page-navigation\">\n        <ul className=\"pagination\">\n          <li\n            className={current > 1 ? 'page-item' : 'page-item disabled'}\n          >\n            <a\n              className=\"page-link\"\n              href=\"/#\"\n              aria-label=\"Previous\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  onPageChange(current - 1);\n                  this.getPaginationSchema(current - 1);\n                }\n              }\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n            </a>\n          </li>\n          {paginationSchema.map(\n            element => (typeof element === 'number'\n              ? (\n                <li\n                  key={uuid()}\n                  className={\n                    element === current\n                      ? 'page-item active-item' : 'page-item'\n                  }\n                >\n                  <a\n                    className=\"page-link\"\n                    href=\"/#\"\n                    onClick={\n                      (event) => {\n                        event.preventDefault();\n                        onPageChange(element);\n                        this.getPaginationSchema(element);\n                      }\n                    }\n                  >\n                    {element}\n                  </a>\n                </li>\n              )\n              : (<li key={uuid()} className=\"page-item\">{element}</li>)),\n          )}\n          <li\n            className={current < amount\n              ? 'page-item' : 'page-item disabled'}\n          >\n            <a\n              className=\"page-link\"\n              href=\"/#\"\n              aria-label=\"Next\"\n              onClick={\n                (event) => {\n                  event.preventDefault();\n                  onPageChange(current + 1);\n                  this.getPaginationSchema(current + 1);\n                }\n              }\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n            </a>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nPagination.propTypes = PaginationTypes;\n","import PropTypes from 'prop-types';\n\nexport const PaginationTypes = {\n  amount: PropTypes.number,\n  current: PropTypes.number,\n};\n","import React from 'react';\nimport { SelectPerPageTypes } from './SelectPerPageTypes';\n\nexport const SelectPerPage = ({ perPage, onPerPageChange }) => (\n  <>\n    <p>\n      Select PerPage:\n      {' '}\n      <select\n        defaultValue={perPage}\n        onChange={(event) => {\n          onPerPageChange(Number(event.target.value));\n        }}\n      >\n        <option value={3}>3</option>\n        <option value={5}>5</option>\n        <option value={10}>10</option>\n        <option value={20}>20</option>\n      </select>\n    </p>\n  </>\n);\n\nSelectPerPage.propTypes = SelectPerPageTypes;\n","import PropTypes from 'prop-types';\n\nexport const SelectPerPageTypes = {\n  perPage: PropTypes.number,\n  onPerPageChange: PropTypes.func,\n  onUpdate: PropTypes.func,\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { SelectPerPage } from './components/SelectPerPage';\n\nexport class App extends React.Component {\n  state = {\n    total: 42,\n    perPage: 5,\n    page: 1,\n  };\n\n  handlePageChange = (newPage) => {\n    this.setState(state => ({\n      page: newPage,\n    }));\n  }\n\n  onPerPageChange = (value) => {\n    this.setState({\n      perPage: value,\n    });\n  }\n\n  render() {\n    const {\n      total,\n      perPage,\n      page,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Pagination</h1>\n        <p>\n          {`Info: ${1 + (perPage * (page - 1))}\n            - ${Math.min(page * perPage, total)} of ${total}`}\n        </p>\n        <SelectPerPage\n          perPage={perPage}\n          onPerPageChange={this.onPerPageChange}\n        />\n        <Pagination\n          amount={Math.ceil(total / perPage)}\n          current={page}\n          onPageChange={this.handlePageChange}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}